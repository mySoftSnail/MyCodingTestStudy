#include <bits/stdc++.h>
using namespace std;

struct tetro {
	bool map[4][4];
};

tetro tetromino[19] = {
	{   1, 1, 1, 1,
		0, 0, 0, 0,
		0, 0, 0, 0,
		0, 0, 0, 0
	},
	{   1, 0, 0, 0,
		1, 0, 0, 0,
		1, 0, 0, 0,
		1, 0, 0, 0
	},
	{   1, 1, 0, 0,
		1, 1, 0, 0,
		0, 0, 0, 0,
		0, 0, 0, 0
	},
	{   1, 0, 0, 0,
		1, 1, 0, 0,
		0, 1, 0, 0,
		0, 0, 0, 0
	},
	{   0, 1, 0, 0,
		1, 1, 0, 0,
		1, 0, 0, 0,
		0, 0, 0, 0
	},
	{   0, 1, 1, 0,
		1, 1, 0, 0,
		0, 0, 0, 0,
		0, 0, 0, 0
	},
	{   1, 1, 0, 0,
		0, 1, 1, 0,
		0, 0, 0, 0,
		0, 0, 0, 0
	},
	{   1, 1, 1, 0,
		0, 1, 0, 0,
		0, 0, 0, 0,
		0, 0, 0, 0
	},
	{   0, 1, 0, 0,
		1, 1, 0, 0,
		0, 1, 0, 0,
		0, 0, 0, 0
	},
	{   0, 1, 0, 0,
		1, 1, 1, 0,
		0, 0, 0, 0,
		0, 0, 0, 0
	},
	{   1, 0, 0, 0,
		1, 1, 0, 0,
		1, 0, 0, 0,
		0, 0, 0, 0
	},
	{   1, 0, 0, 0,
		1, 0, 0, 0,
		1, 1, 0, 0,
		0, 0, 0, 0
	},
	{   0, 1, 0, 0,
		0, 1, 0, 0,
		1, 1, 0, 0,
		0, 0, 0, 0
	},
	{   1, 0, 0, 0,
		1, 1, 1, 0,
		0, 0, 0, 0,
		0, 0, 0, 0
	},
	{   1, 1, 1, 0,
		1, 0, 0, 0,
		0, 0, 0, 0,
		0, 0, 0, 0
	},
	{   1, 1, 0, 0,
		1, 0, 0, 0,
		1, 0, 0, 0,
		0, 0, 0, 0
	},
	{   1, 1, 1, 0,
		0, 0, 1, 0,
		0, 0, 0, 0,
		0, 0, 0, 0
	},
	{   0, 0, 1, 0,
		1, 1, 1, 0,
		0, 0, 0, 0,
		0, 0, 0, 0
	},
	{   1, 1, 0, 0,
		0, 1, 0, 0,
		0, 1, 0, 0,
		0, 0, 0, 0
	}
};

int board[502][502];

int main() {
	ios::sync_with_stdio(0);
	cin.tie(0);

	int n, m;
	cin >> n >> m;
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < m; ++j)
			cin >> board[i][j];

	int ans = 0;
	for (int k = 0; k < 19; ++k) {
		for (int i = 0; i < n; ++i) {
			for (int j = 0; j < m; ++j) {

				bool OOB = false;
				int sum = 0;
				for (int r = 0; r < 4; ++r) {
					for (int c = 0; c < 4; ++c) {
						if (tetromino[k].map[r][c]) {
							if (i + r >= n || j + c >= m) {
								OOB = true;
								break;
							}
							sum += board[i + r][j + c];
						}
					}
					if (OOB) break;
				}
				ans = max(ans, sum);
			}
		}
	}

	cout << ans;

	return 0;
}